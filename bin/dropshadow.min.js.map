{"version":3,"file":"dropshadow.min.js","sources":["../src/dropshadow/DropShadowFilter.js"],"sourcesContent":["import vertex from '../fragments/default.vert';\nimport fragment from './dropshadow.frag';\n\n/**\n * Drop shadow filter.\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [rotation=45] The angle of the shadow in degrees.\n * @param {number} [distance=5] Distance of shadow\n * @param {number} [blur=2] Blur of the shadow\n * @param {number} [color=0x000000] Color of the shadow\n * @param {number} [alpha=0.5] Alpha of the shadow\n */\nexport default class DropShadowFilter extends PIXI.Filter {\n    constructor(rotation = 45, distance = 5, blur = 2, color = 0x000000, alpha = 0.5) {\n        super();\n\n        this.tintFilter = new PIXI.Filter(vertex, fragment);\n        this.blurFilter = new PIXI.filters.BlurFilter();\n        this.blurFilter.blur = blur;\n\n        this.rotation = rotation;\n        this.padding = distance;\n        this.distance = distance;\n        this.alpha = alpha;\n        this.color = color;\n    }\n\n    apply(filterManager, input, output) {\n        const target = filterManager.getRenderTarget();\n        target.clear();\n        if (!output.root) {\n            output.clear();\n        }\n        target.transform = new PIXI.Matrix();\n        target.transform.translate(\n            this.distance * Math.cos(this.angle), \n            this.distance * Math.sin(this.angle)\n        );\n        this.tintFilter.apply(filterManager, input, target);\n        this.blurFilter.apply(filterManager, target, output);\n        super.apply(filterManager, input, output);\n        target.transform = null;\n        filterManager.returnRenderTarget(target);\n    }\n\n    updatePadding() {\n        this.padding = Math.max(this.distance, 10) * this.blur * 2;\n    }\n\n    /**\n     * Distance offset of the shadow\n     * @member {number}\n     * @default 5\n     */\n    get distance() {\n        return this._distance;\n    }\n    set distance(value) {\n        this._distance = value;\n        this.updatePadding();\n    }\n\n    /**\n     * The angle of the shadow in degrees\n     * @member {number}\n     * @default 2\n     */\n    get rotation() {\n        return this.angle / PIXI.DEG_TO_RAD;\n    }\n    set rotation(value) {\n        this.angle = value * PIXI.DEG_TO_RAD;\n    }\n\n    /**\n     * The blur of the shadow\n     * @member {number}\n     * @default 2\n     */\n    get blur() {\n        return this.blurFilter.blur;\n    }\n    set blur(value) {\n        this.blurFilter.blur = value;\n        this.updatePadding();\n    }\n\n    /**\n     * The alpha of the shadow\n     * @member {number}\n     * @default 1\n     */\n    get alpha() {\n        return this.tintFilter.uniforms.alpha;\n    }\n    set alpha(value) {\n        this.tintFilter.uniforms.alpha = value;\n    }\n\n    /**\n     * The color of the shadow.\n     * @member {number}\n     * @default 0x000000\n     */\n    get color() {\n        return PIXI.utils.rgb2hex(this.tintFilter.uniforms.color);\n    }\n    set color(value) {\n        PIXI.utils.hex2rgb(value, this.tintFilter.uniforms.color);\n    }\n}\n\n"],"names":["DropShadowFilter","rotation","distance","blur","color","alpha","super","this","tintFilter","PIXI","Filter","vertex","fragment","blurFilter","filters","BlurFilter","padding","apply","filterManager","input","output","const","target","getRenderTarget","clear","root","transform","Matrix","translate","Math","cos","angle","sin","returnRenderTarget","updatePadding","max","prototypeAccessors","_distance","value","DEG_TO_RAD","uniforms","utils","rgb2hex","hex2rgb"],"mappings":";;;;;;;iwBAcqBA,cAAqC,WAC1CC,EAAeC,EAAcC,EAAUC,EAAkBC,kBAA9C,mBAAe,kBAAU,kBAAW,kBAAkB,IACzEC,OAAMC,MAENA,KAAKC,WAAa,IAAIC,KAAKC,OAAOC,EAAQC,GAC1CL,KAAKM,WAAa,IAAIJ,KAAKK,QAAQC,WACnCR,KAAKM,WAAWV,KAAOA,EAEvBI,KAAKN,SAAWA,EAChBM,KAAKS,QAAUd,EACfK,KAAKL,SAAWA,EAChBK,KAAKF,MAAQA,EACbE,KAAKH,MAAQA,gJAGjBJ,YAAAiB,eAAMC,EAAeC,EAAOC,GACxBC,IAAMC,EAASJ,EAAcK,kBAC7BD,EAAOE,QACFJ,EAAOK,MACRL,EAAOI,QAEXF,EAAOI,UAAY,IAAIjB,KAAKkB,OAC5BL,EAAOI,UAAUE,UACbrB,KAAKL,SAAW2B,KAAKC,IAAIvB,KAAKwB,OAC9BxB,KAAKL,SAAW2B,KAAKG,IAAIzB,KAAKwB,QAElCxB,KAAKC,WAAWS,MAAMC,EAAeC,EAAOG,GAC5Cf,KAAKM,WAAWI,MAAMC,EAAeI,EAAQF,GAC7Cd,YAAMW,WAAMV,KAAAW,EAAeC,EAAOC,GAClCE,EAAOI,UAAY,KACnBR,EAAce,mBAAmBX,IAGrCtB,YAAAkC,yBACI3B,KAAKS,QAAUa,KAAKM,IAAI5B,KAAKL,SAAU,IAAMK,KAAKJ,KAAO,GAQ7DiC,EAAAlC,wBACI,OAAOK,KAAK8B,WAEhBD,EAAAlC,sBAAaoC,GACT/B,KAAK8B,UAAYC,EACjB/B,KAAK2B,iBAQTE,EAAAnC,wBACI,OAAOM,KAAKwB,MAAQtB,KAAK8B,YAE7BH,EAAAnC,sBAAaqC,GACT/B,KAAKwB,MAAQO,EAAQ7B,KAAK8B,YAQ9BH,EAAAjC,oBACI,OAAOI,KAAKM,WAAWV,MAE3BiC,EAAAjC,kBAASmC,GACL/B,KAAKM,WAAWV,KAAOmC,EACvB/B,KAAK2B,iBAQTE,EAAA/B,qBACI,OAAOE,KAAKC,WAAWgC,SAASnC,OAEpC+B,EAAA/B,mBAAUiC,GACN/B,KAAKC,WAAWgC,SAASnC,MAAQiC,GAQrCF,EAAAhC,qBACI,OAAOK,KAAKgC,MAAMC,QAAQnC,KAAKC,WAAWgC,SAASpC,QAEvDgC,EAAAhC,mBAAUkC,GACN7B,KAAKgC,MAAME,QAAQL,EAAO/B,KAAKC,WAAWgC,SAASpC,kDAhGbK,KAAKC"}