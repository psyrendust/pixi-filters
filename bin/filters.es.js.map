{"version":3,"file":"filters.es.js","sources":["../src/ascii/AsciiFilter.js","../src/bloom/BloomFilter.js","../src/bulgepinch/BulgePinchFilter.js","../src/colorreplace/ColorReplaceFilter.js","../src/convolution/ConvolutionFilter.js","../src/crosshatch/CrossHatchFilter.js","../src/dot/DotFilter.js","../src/dropshadow/DropShadowFilter.js","../src/emboss/EmbossFilter.js","../src/glow/GlowFilter.js","../src/outline/OutlineFilter.js","../src/pixelate/PixelateFilter.js","../src/rgb/RGBSplitFilter.js","../src/shockwave/ShockwaveFilter.js","../src/simplelightmap/SimpleLightmapFilter.js","../src/tiltshift/TiltShiftAxisFilter.js","../src/tiltshift/TiltShiftXFilter.js","../src/tiltshift/TiltShiftYFilter.js","../src/tiltshift/TiltShiftFilter.js","../src/twist/TwistFilter.js"],"sourcesContent":["import vertex from '../fragments/default.vert';\nimport fragment from './ascii.frag';\n\n// TODO (cengler) - The Y is flipped in this shader for some reason.\n\n/**\n * @author Vico @vicocotea\n * original shader : https://www.shadertoy.com/view/lssGDj by @movAX13h\n */\n\n/**\n * An ASCII filter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [size=8] Size of the font\n */\nexport default class AsciiFilter extends PIXI.Filter {\n    \n    constructor(size = 8) {\n        super(vertex, fragment);\n        this.size = size;\n    }\n\n    /**\n     * The pixel size used by the filter.\n     *\n     * @member {number}\n     */\n    get size() {\n        return this.uniforms.pixelSize;\n    }\n    set size(value) {\n        this.uniforms.pixelSize = value;\n    }\n}\n","const {BlurXFilter, BlurYFilter, VoidFilter} = PIXI.filters;\n\n/**\n * The BloomFilter applies a Gaussian blur to an object.\n * The strength of the blur can be set for x- and y-axis separately.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number|PIXI.Point} [blur=2] Sets the strength of both the blurX and blurY properties simultaneously\n */\nexport default class BloomFilter extends PIXI.Filter {\n\n    constructor(blur = 2) {\n        super();\n        this.blurXFilter = new BlurXFilter();\n        this.blurYFilter = new BlurYFilter();\n        this.blurYFilter.blendMode = PIXI.BLEND_MODES.SCREEN;\n        this.defaultFilter = new VoidFilter();\n\n        if (typeof blur === 'number') {\n            this.blur = blur;\n        }\n        else if (blur instanceof PIXI.Point) {\n            this.blurX = blur.x;\n            this.blurY = blur.y;\n        }\n    }\n\n    apply(filterManager, input, output) {\n        const renderTarget = filterManager.getRenderTarget(true);\n\n        //TODO - copyTexSubImage2D could be used here?\n        this.defaultFilter.apply(filterManager, input, output);\n\n        this.blurXFilter.apply(filterManager, input, renderTarget);\n        this.blurYFilter.apply(filterManager, renderTarget, output);\n\n        filterManager.returnRenderTarget(renderTarget);\n    }\n\n    /**\n     * Sets the strength of both the blurX and blurY properties simultaneously\n     *\n     * @member {number}\n     * @default 2\n     */\n    get blur() {\n        return this.blurXFilter.blur;\n    }\n    set blur(value) {\n        this.blurXFilter.blur = this.blurYFilter.blur = value;\n    }\n\n    /**\n     * Sets the strength of the blurX property\n     *\n     * @member {number}\n     * @default 2\n     */\n    get blurX() {\n        return this.blurXFilter.blur;\n    }\n    set blurX(value) {\n        this.blurXFilter.blur = value;\n    }\n\n    /**\n     * Sets the strength of the blurY property\n     *\n     * @member {number}\n     * @default 2\n     */\n    get blurY() {\n        return this.blurYFilter.blur;\n    }\n    set blurY(value) {\n        this.blurYFilter.blur = value;\n    }\n}\n","import vertex from './bulgePinch.vert';\nimport fragment from './bulgePinch.frag';\n\n/**\n * @author Julien CLEREL @JuloxRox\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/warp/bulgepinch.js by Evan Wallace : http://madebyevan.com/\n */\n \n/**\n * Bulges or pinches the image in a circle.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {PIXI.Point|Array<number>} [center=[0,0]] The x and y coordinates of the center of the circle of effect.\n * @param {number} [radius=100] The radius of the circle of effect.\n * @param {number} [strength=1] -1 to 1 (-1 is strong pinch, 0 is no effect, 1 is strong bulge)\n */\nexport default class BulgePinchFilter extends PIXI.Filter {\n\n    constructor(center, radius, strength) {\n        super(vertex, fragment);\n        this.center = center || [0.5, 0.5];\n        this.radius = radius || 100;\n        this.strength = strength || 1;\n    }\n\n    /**\n     * The radius of the circle of effect.\n     *\n     * @member {number}\n     */\n    get radius() {\n        return this.uniforms.radius;\n    }\n    set radius(value) {\n        this.uniforms.radius = value;\n    }\n\n    /**\n     * The strength of the effect. -1 to 1 (-1 is strong pinch, 0 is no effect, 1 is strong bulge)\n     *\n     * @member {number}\n     */\n    get strength() {\n        return this.uniforms.strength;\n    }\n    set strength(value) {\n        this.uniforms.strength = value;\n    }\n\n    /**\n     * The x and y coordinates of the center of the circle of effect.\n     *\n     * @member {PIXI.Point}\n     */\n    get center() {\n        return this.uniforms.center;\n    }\n    set center(value) {\n        this.uniforms.center = value;\n    }\n}\n","import vertex from './colorReplace.vert';\nimport fragment from './colorReplace.frag';\n\n/**\n * ColorReplaceFilter, originally by mishaa, updated by timetocode\n * http://www.html5gamedevs.com/topic/10640-outline-a-sprite-change-certain-colors/?p=69966\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number|Array<number>} [originalColor=0xFF0000] The color that will be changed, as a 3 component RGB e.g. [1.0, 1.0, 1.0]\n * @param {number|Array<number>} [newColor=0x000000] The resulting color, as a 3 component RGB e.g. [1.0, 0.5, 1.0]\n * @param {number} [epsilon=0.4] Tolerance/sensitivity of the floating-point comparison between colors (lower = more exact, higher = more inclusive)\n *\n * @example\n *  // replaces true red with true blue\n *  someSprite.filters = [new ColorReplaceFilter(\n *   [1, 0, 0],\n *   [0, 0, 1],\n *   0.001\n *   )];\n *  // replaces the RGB color 220, 220, 220 with the RGB color 225, 200, 215\n *  someOtherSprite.filters = [new ColorReplaceFilter(\n *   [220/255.0, 220/255.0, 220/255.0],\n *   [225/255.0, 200/255.0, 215/255.0],\n *   0.001\n *   )];\n *  // replaces the RGB color 220, 220, 220 with the RGB color 225, 200, 215\n *  someOtherSprite.filters = [new ColorReplaceFilter(0xdcdcdc, 0xe1c8d7, 0.001)];\n *\n */\nexport default class ColorReplaceFilter extends PIXI.Filter {\n\n    constructor(originalColor = 0xFF0000, newColor = 0x000000, epsilon = 0.4) {\n        super(vertex, fragment);\n        this.originalColor = originalColor;\n        this.newColor = newColor;\n        this.epsilon = epsilon;\n    }\n\n    /**\n     * The color that will be changed, as a 3 component RGB e.g. [1.0, 1.0, 1.0]\n     * @member {number|Array<number>}\n     * @default 0xFF0000\n     */\n    set originalColor(value) {\n        let arr = this.uniforms.originalColor;\n        if (typeof value === 'number') {\n            PIXI.utils.hex2rgb(value, arr);\n            this._originalColor = value;\n        }\n        else {\n            arr[0] = value[0];\n            arr[1] = value[1];\n            arr[2] = value[2];\n            this._originalColor = PIXI.utils.rgb2hex(arr);\n        }\n    }\n    get originalColor() {\n        return this._originalColor;\n    }\n\n    /**\n     * The resulting color, as a 3 component RGB e.g. [1.0, 0.5, 1.0]\n     * @member {number|Array<number>}\n     * @default 0x000000\n     */\n    set newColor(value) {\n        let arr = this.uniforms.newColor;\n        if (typeof value === 'number') {\n            PIXI.utils.hex2rgb(value, arr);\n            this._newColor = value;\n        }\n        else {\n            arr[0] = value[0];\n            arr[1] = value[1];\n            arr[2] = value[2];\n            this._newColor = PIXI.utils.rgb2hex(arr);\n        }\n    }\n    get newColor() {\n        return this._newColor;\n    }\n\n    /**\n     * Tolerance/sensitivity of the floating-point comparison between colors (lower = more exact, higher = more inclusive)\n     * @member {number}\n     * @default 0.4\n     */\n    set epsilon(value) {\n        this.uniforms.epsilon = value;\n    }\n    get epsilon() {\n        return this.uniforms.epsilon;\n    }\n}\n","import vertex from '../fragments/default.vert';\nimport fragment from './convolution.frag';\n\n/**\n * The ConvolutionFilter class applies a matrix convolution filter effect.\n * A convolution combines pixels in the input image with neighboring pixels to produce a new image.\n * A wide variety of image effects can be achieved through convolutions, including blurring, edge\n * detection, sharpening, embossing, and beveling. The matrix should be specified as a 9 point Array.\n * See http://docs.gimp.org/en/plug-in-convmatrix.html for more info.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param matrix {number[]} An array of values used for matrix transformation. Specified as a 9 point Array.\n * @param width {number} Width of the object you are transforming\n * @param height {number} Height of the object you are transforming\n */\nexport default class ConvolutionFilter extends PIXI.Filter {\n\n    constructor(matrix, width, height) {\n        super(vertex, fragment);\n        this.matrix = matrix;\n        this.width = width;\n        this.height = height;\n    }\n\n    /**\n     * An array of values used for matrix transformation. Specified as a 9 point Array.\n     *\n     * @member {Array<number>}\n     */\n    get matrix() {\n        return this.uniforms.matrix;\n    }\n    set matrix(value) {\n        this.uniforms.matrix = new Float32Array(value);\n    }\n\n    /**\n     * Width of the object you are transforming\n     *\n     * @member {number}\n     */\n    get width() {\n        return 1/this.uniforms.texelSize[0];\n    }\n    set width(value) {\n        this.uniforms.texelSize[0] = 1/value;\n    }\n\n    /**\n     * Height of the object you are transforming\n     *\n     * @member {number}\n     */\n    get height() {\n        return 1/this.uniforms.texelSize[1];\n    }\n    set height(value) {\n        this.uniforms.texelSize[1] = 1/value;\n    }\n}\n","import vertex from '../fragments/default.vert';\nimport fragment from './crosshatch.frag';\n\n/**\n * A Cross Hatch effect filter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n */\nexport default class CrossHatchFilter extends PIXI.Filter {\n    constructor() {\n        super(vertex, fragment);\n    }\n}\n","import vertex from '../fragments/default.vert';\nimport fragment from './dot.frag';\n\n/**\n * @author Mat Groves http://matgroves.com/ @Doormat23\n * original filter: https://github.com/evanw/glfx.js/blob/master/src/filters/fun/dotscreen.js\n */\n\n/**\n * This filter applies a dotscreen effect making display objects appear to be made out of\n * black and white halftone dots like an old printer.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [scale=1] The scale of the effect.\n * @param {number} [angle=5] The radius of the effect.\n */\nexport default class DotFilter extends PIXI.Filter {\n\n    constructor(scale = 1, angle = 5) {\n        super(vertex, fragment);\n        this.scale = scale;\n        this.angle = angle;\n    }\n\n    /**\n     * The scale of the effect.\n     * @member {number}\n     * @default 1\n     */\n    get scale() {\n        return this.uniforms.scale;\n    }\n    set scale(value) {\n        this.uniforms.scale = value;\n    }\n\n    /**\n     * The radius of the effect.\n     * @member {number}\n     * @default 5\n     */\n    get angle() {\n        return this.uniforms.angle;\n    }\n    set angle(value) {\n        this.uniforms.angle = value;\n    }\n}\n","import vertex from '../fragments/default.vert';\nimport fragment from './dropshadow.frag';\n\n/**\n * Drop shadow filter.\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [rotation=45] The angle of the shadow in degrees.\n * @param {number} [distance=5] Distance of shadow\n * @param {number} [blur=2] Blur of the shadow\n * @param {number} [color=0x000000] Color of the shadow\n * @param {number} [alpha=0.5] Alpha of the shadow\n */\nexport default class DropShadowFilter extends PIXI.Filter {\n    constructor(rotation = 45, distance = 5, blur = 2, color = 0x000000, alpha = 0.5) {\n        super();\n\n        this.tintFilter = new PIXI.Filter(vertex, fragment);\n        this.blurFilter = new PIXI.filters.BlurFilter();\n        this.blurFilter.blur = blur;\n\n        this.rotation = rotation;\n        this.padding = distance;\n        this.distance = distance;\n        this.alpha = alpha;\n        this.color = color;\n    }\n\n    apply(filterManager, input, output) {\n        const target = filterManager.getRenderTarget();\n        target.clear();\n        if (!output.root) {\n            output.clear();\n        }\n        target.transform = new PIXI.Matrix();\n        target.transform.translate(\n            this.distance * Math.cos(this.angle), \n            this.distance * Math.sin(this.angle)\n        );\n        this.tintFilter.apply(filterManager, input, target);\n        this.blurFilter.apply(filterManager, target, output);\n        super.apply(filterManager, input, output);\n        target.transform = null;\n        filterManager.returnRenderTarget(target);\n    }\n\n    updatePadding() {\n        this.padding = Math.max(this.distance, 10) * this.blur * 2;\n    }\n\n    /**\n     * Distance offset of the shadow\n     * @member {number}\n     * @default 5\n     */\n    get distance() {\n        return this._distance;\n    }\n    set distance(value) {\n        this._distance = value;\n        this.updatePadding();\n    }\n\n    /**\n     * The angle of the shadow in degrees\n     * @member {number}\n     * @default 2\n     */\n    get rotation() {\n        return this.angle / PIXI.DEG_TO_RAD;\n    }\n    set rotation(value) {\n        this.angle = value * PIXI.DEG_TO_RAD;\n    }\n\n    /**\n     * The blur of the shadow\n     * @member {number}\n     * @default 2\n     */\n    get blur() {\n        return this.blurFilter.blur;\n    }\n    set blur(value) {\n        this.blurFilter.blur = value;\n        this.updatePadding();\n    }\n\n    /**\n     * The alpha of the shadow\n     * @member {number}\n     * @default 1\n     */\n    get alpha() {\n        return this.tintFilter.uniforms.alpha;\n    }\n    set alpha(value) {\n        this.tintFilter.uniforms.alpha = value;\n    }\n\n    /**\n     * The color of the shadow.\n     * @member {number}\n     * @default 0x000000\n     */\n    get color() {\n        return PIXI.utils.rgb2hex(this.tintFilter.uniforms.color);\n    }\n    set color(value) {\n        PIXI.utils.hex2rgb(value, this.tintFilter.uniforms.color);\n    }\n}\n\n","import vertex from '../fragments/default.vert';\nimport fragment from './emboss.frag';\n\n/**\n * An RGB Split Filter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [strength=5] Strength of the emboss.\n */\nexport default class EmbossFilter extends PIXI.Filter {\n    constructor(strength = 5){\n        super(vertex, fragment);\n        this.strength = strength;\n    }\n\n    /**\n     * Strength of emboss.\n     *\n     * @member {number}\n     */\n    get strength() {\n        return this.uniforms.strength;\n    }\n    set strength(value) {\n        this.uniforms.strength = value;\n    }\n}\n","import vertex from './glow.vert';\nimport fragment from './glow.frag';\n\n/**\n * GlowFilter, originally by mishaa\n * http://www.html5gamedevs.com/topic/12756-glow-filter/?hl=mishaa#entry73578\n * http://codepen.io/mishaa/pen/raKzrm\n *\n * @class\n * \n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [distance=10] The distance of the glow. Make it 2 times more for resolution=2. It cant be changed after filter creation\n * @param {number} [outerStrength=4] The strength of the glow outward from the edge of the sprite.\n * @param {number} [innerStrength=0] The strength of the glow inward from the edge of the sprite.\n * @param {number} [color=0xffffff] The color of the glow.\n * @param {number} [quality=0.1] A number between 0 and 1 that describes the quality of the glow.\n *\n * @example\n *  someSprite.filters = [\n *      new GlowFilter(15, 2, 1, 0xFF0000, 0.5)\n *  ];\n */\nexport default class GlowFilter extends PIXI.Filter {\n\n    constructor(distance = 10, outerStrength = 4, innerStrength = 0, color = 0xffffff, quality = 0.1) {\n        super(vertex, fragment\n            .replace(/%QUALITY_DIST%/gi, '' + (1 / quality / distance).toFixed(7))\n            .replace(/%DIST%/gi, '' + distance.toFixed(7)));\n\n        this.uniforms.glowColor = new Float32Array([0, 0, 0, 1]);\n        this.distance = distance;\n        this.color = color;\n        this.outerStrength = outerStrength;\n        this.innerStrength = innerStrength;\n    }\n\n    /**\n     * The color of the glow.\n     * @member {number}\n     * @default 0xFFFFFF\n     */\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.glowColor);\n    }\n    set color(value) {\n        PIXI.utils.hex2rgb(value, this.uniforms.glowColor);\n    }\n\n    /**\n     * The distance of the glow. Make it 2 times more for resolution=2. It cant be changed after filter creation\n     * @member {number}\n     * @default 10\n     */\n    get distance() {\n        return this.uniforms.distance;\n    }\n    set distance(value) {\n        this.uniforms.distance = value;\n    }\n\n    /**\n     * The strength of the glow outward from the edge of the sprite.\n     * @member {number}\n     * @default 4\n     */\n    get outerStrength() {\n        return this.uniforms.outerStrength;\n    }\n    set outerStrength(value) {\n        this.uniforms.outerStrength = value;\n    }\n\n    /**\n     * The strength of the glow inward from the edge of the sprite.\n     * @member {number}\n     * @default 0\n     */\n    get innerStrength() {\n        return this.uniforms.innerStrength;\n    }\n    set innerStrength(value) {\n        this.uniforms.innerStrength = value;\n    }\n}","import vertex from './outline.vert';\nimport fragment from './outline.frag';\n\n/**\n * OutlineFilter, originally by mishaa\n * http://www.html5gamedevs.com/topic/10640-outline-a-sprite-change-certain-colors/?p=69966\n * http://codepen.io/mishaa/pen/emGNRB\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [thickness=1] The tickness of the outline. Make it 2 times more for resolution 2\n * @param {number} [color=0x000000] The color of the glow.\n *\n * @example\n *  someSprite.shader = new OutlineFilter(9, 0xFF0000);\n */\nexport default class OutlineFilter extends PIXI.Filter {\n\n    constructor(thickness = 1, color = 0x000000) {\n        super(vertex, fragment.replace(/%THICKNESS%/gi, (1.0 / thickness).toFixed(7)));\n        this.thickness = thickness;\n        this.uniforms.outlineColor = new Float32Array([0, 0, 0, 1]);\n        this.color = color;\n    }\n\n    /**\n     * The color of the glow.\n     * @member {number}\n     * @default 0x000000\n     */\n    get color() {\n        return PIXI.utils.rgb2hex(this.uniforms.outlineColor);\n    }\n    set color(value) {\n        PIXI.utils.hex2rgb(value, this.uniforms.outlineColor);\n    }\n\n    /**\n     * The tickness of the outline. Make it 2 times more for resolution 2\n     * @member {number}\n     * @default 1\n     */\n    get thickness() {\n        return this.uniforms.thickness;\n    }\n    set thickness(value) {\n        this.uniforms.thickness = value;\n    }\n}\n","import vertex from '../fragments/default.vert';\nimport fragment from './pixelate.frag';\n\n/**\n * This filter applies a pixelate effect making display objects appear 'blocky'.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {PIXI.Point|Array<number>|number} [size=10] Either the width/height of the size of the pixels, or square size\n */\nexport default class PixelateFilter extends PIXI.Filter {\n\n    constructor(size = 10) {\n        super(vertex, fragment);\n        this.size = size; \n    }\n\n    /**\n     * This a point that describes the size of the blocks.\n     * x is the width of the block and y is the height.\n     *\n     * @member {PIXI.Point|Array<number>|number}\n     * @default 10\n     */\n    get size() {\n        return this.uniforms.size;\n    }\n    set size(value) {\n        if (typeof value === 'number') {\n            value = [value, value];\n        }\n        this.uniforms.size = value;\n    }\n}\n","import vertex from '../fragments/default.vert';\nimport fragment from './rgb-split.frag';\n\n/**\n * An RGB Split Filter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {PIXI.Point} [red=[-10,0]] Red channel offset\n * @param {PIXI.Point} [green=[0, 10]] Green channel offset\n * @param {PIXI.Point} [blue=[0, 0]] Blue channel offset\n */\nexport default class RGBSplitFilter extends PIXI.Filter {\n    constructor(red = [-10, 0], green = [0, 10], blue = [0, 0]) {\n        super(vertex, fragment);\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n    }\n\n    /**\n     * Red channel offset.\n     *\n     * @member {PIXI.Point}\n     */\n    get red() {\n        return this.uniforms.red;\n    }\n    set red(value) {\n        this.uniforms.red = value;\n    }\n\n    /**\n     * Green channel offset.\n     *\n     * @member {PIXI.Point}\n     */\n    get green() {\n        return this.uniforms.green;\n    }\n    set green(value) {\n        this.uniforms.green = value;\n    }\n\n    /**\n     * Blue offset.\n     *\n     * @member {PIXI.Point}\n     */\n    get blue() {\n        return this.uniforms.blue;\n    }\n    set blue(value) {\n        this.uniforms.blue = value;\n    }\n}\n","import vertex from '../fragments/default.vert';\nimport fragment from './shockwave.frag';\n\n/**\n * The ColorMatrixFilter class lets you apply a 4x4 matrix transformation on the RGBA\n * color and alpha values of every pixel on your displayObject to produce a result\n * with a new set of RGBA color and alpha values. It's pretty powerful!\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {PIXI.Point} [center=[0.5, 0.5]] See center property\n * @param {Array<number>} [params=[10, 0.8, 0.1]] See params property\n * @param {number} [time=0] See time property\n */\nexport default class ShockwaveFilter extends PIXI.Filter {\n\n    constructor(center = [0.5, 0.5], params = [10, 0.8, 0.1], time = 0) {\n        super(vertex, fragment, {\n            center: { type: 'v2', value: { x: 0.5, y: 0.5 } },\n            params: { type: 'v3', value: { x: 10, y: 0.8, z: 0.1 } },\n            time: { type: '1f', value: 0 }\n        });\n\n        this.center = center;\n        this.params = params;\n        this.time = time;\n    }\n\n    /**\n     * Sets the center of the shockwave in normalized screen coords. That is\n     * (0,0) is the top-left and (1,1) is the bottom right.\n     *\n     * @member {PIXI.Point}\n     */\n    get center() {\n        return this.uniforms.center;\n    }\n    set center(value) {\n        this.uniforms.center = value;\n    }\n\n    /**\n     * Sets the params of the shockwave. These modify the look and behavior of\n     * the shockwave as it ripples out.\n     *\n     * @member {Array<number>}\n     */\n    get params() {\n        return this.uniforms.params;\n    }\n    set params(value) {\n        this.uniforms.params = value;\n    }\n\n    /**\n     * Sets the elapsed time of the shockwave. This controls the speed at which\n     * the shockwave ripples out.\n     *\n     * @member {number}\n     */\n    get time() {\n        return this.uniforms.time;\n    }\n    set time(value) {\n        this.uniforms.time = value;\n    }\n}\n","import vertex from './simpleLightmap.vert';\nimport fragment from './simpleLightmap.frag';\n\n/**\n* SimpleLightmap, originally by Oza94\n* http://www.html5gamedevs.com/topic/20027-pixijs-simple-lightmapping/\n* http://codepen.io/Oza94/pen/EPoRxj\n*\n* @class\n* @extends PIXI.Filter\n* @memberof PIXI.filters\n* @param {PIXI.Texture} lightmapTexture a texture where your lightmap is rendered\n* @param {Array<number>} ambientColor An RGBA array of the ambient color\n* @param {Array<number>} [resolution=[1, 1]] An array for X/Y resolution\n*\n* @example\n*  var lightmapTex = new PIXI.RenderTexture(renderer, 400, 300);\n*\n*  // ... render lightmap on lightmapTex\n*\n*  stageContainer.filters = [\n*    new SimpleLightmapFilter(lightmapTex, [0.3, 0.3, 0.7, 0.5], [1.0, 1.0])\n*  ];\n*/\nexport default class SimpleLightmapFilter extends PIXI.Filter {\n\n    constructor(lightmapTexture, ambientColor, resolution = [1, 1]) {    \n        super(vertex, fragment);\n        this.uniforms.u_lightmap = lightmapTexture;\n        this.uniforms.resolution = new Float32Array(resolution);\n        this.uniforms.ambientColor =  new Float32Array(ambientColor);\n    }\n\n\n    /**\n     * a texture where your lightmap is rendered\n     * @member {PIXI.Texture}\n     */\n    get texture() {\n        return this.uniforms.u_lightmap;\n    }\n    set texture(value) {\n        this.uniforms.u_lightmap = value;\n    }\n\n    /**\n     * An RGBA array of the ambient color\n     * @member {Array<number>}\n     */\n    get color() {\n        return this.uniforms.ambientColor;\n    }\n    set color(value) {\n        this.uniforms.ambientColor = new Float32Array(value);\n    }\n\n    /**\n     * An array for X/Y resolution\n     * @member {Array<number>}\n     */\n    get resolution() {\n        return this.uniforms.resolution;\n    }\n    set resolution(value) {\n        this.uniforms.resolution = new Float32Array(value);\n    }\n}\n","import vertex from '../fragments/default.vert';\nimport fragment from './tilt-shift.frag';\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftAxisFilter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @private\n */\nexport default class TiltShiftAxisFilter extends PIXI.Filter {\n\n    constructor(blur = 100, gradientBlur = 600, start = null, end = null){\n        super(vertex, fragment);\n        this.uniforms.blur = blur;\n        this.uniforms.gradientBlur = gradientBlur;\n        this.uniforms.start = start || new PIXI.Point(0, window.innerHeight / 2);\n        this.uniforms.end = end || new PIXI.Point(600, window.innerHeight / 2);\n        this.uniforms.delta = new PIXI.Point(30, 30);\n        this.uniforms.texSize = new PIXI.Point(window.innerWidth, window.innerHeight);\n        this.updateDelta();\n    }\n\n    /**\n     * Updates the filter delta values.\n     * This is overridden in the X and Y filters, does nothing for this class.\n     *\n     */\n    updateDelta() {\n        this.uniforms.delta.x = 0;\n        this.uniforms.delta.y = 0;\n    }\n\n    /**\n     * The strength of the blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    get blur() {\n        return this.uniforms.blur;\n    }\n    set blur(value) {\n        this.uniforms.blur = value;\n    }\n\n    /**\n     * The strength of the gradient blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    get gradientBlur() {\n        return this.uniforms.gradientBlur;\n    }\n    set gradientBlur(value) {\n        this.uniforms.gradientBlur = value;\n    }\n\n    /**\n     * The X value to start the effect at.\n     *\n     * @member {PIXI.Point}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    get start() {\n        return this.uniforms.start;\n    }\n    set start(value) {\n        this.uniforms.start = value;\n        this.updateDelta();\n    }\n\n    /**\n     * The X value to end the effect at.\n     *\n     * @member {PIXI.Point}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    get end() {\n        return this.uniforms.end;\n    }\n    set end(value) {\n        this.uniforms.end = value;\n        this.updateDelta();\n    }\n}\n","import TiltShiftAxisFilter from './TiltShiftAxisFilter';\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftXFilter.\n *\n * @class\n * @extends PIXI.TiltShiftAxisFilter\n * @memberof PIXI.filters\n * @private\n */\nexport default class TiltShiftXFilter extends TiltShiftAxisFilter {\n    /**\n     * Updates the filter delta values.\n     */\n    updateDelta() {\n        const dx = this.uniforms.end.x - this.uniforms.start.x;\n        const dy = this.uniforms.end.y - this.uniforms.start.y;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        this.uniforms.delta.x = dx / d;\n        this.uniforms.delta.y = dy / d;\n    }\n}\n","import TiltShiftAxisFilter from './TiltShiftAxisFilter';\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftYFilter.\n *\n * @class\n * @extends PIXI.TiltShiftAxisFilter\n * @memberof PIXI.filters\n * @private\n */\nexport default class TiltShiftYFilter extends TiltShiftAxisFilter {\n    /**\n     * Updates the filter delta values.\n     */\n    updateDelta() {\n        const dx = this.uniforms.end.x - this.uniforms.start.x;\n        const dy = this.uniforms.end.y - this.uniforms.start.y;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        this.uniforms.delta.x = -dy / d;\n        this.uniforms.delta.y = dx / d;\n    }\n}","import TiltShiftXFilter from './TiltShiftXFilter';\nimport TiltShiftYFilter from './TiltShiftYFilter';\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShift Filter. Manages the pass of both a TiltShiftXFilter and TiltShiftYFilter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [blur=100] The strength of the blur.\n * @param {number} [gradientBlur=600] The strength of the gradient blur.\n * @param {PIXI.Point} [start=null] The Y value to start the effect at.\n * @param {PIXI.Point} [end=null] The Y value to end the effect at.\n */\nexport default class TiltShiftFilter extends PIXI.Filter {\n    \n    constructor(blur = 100, gradientBlur = 600, start = null, end = null) {\n        super();\n        this.tiltShiftXFilter = new TiltShiftXFilter(blur, gradientBlur, start, end);\n        this.tiltShiftYFilter = new TiltShiftYFilter(blur, gradientBlur, start, end);\n    }\n\n    apply(filterManager, input, output) {\n        let renderTarget = filterManager.getRenderTarget(true);\n        this.tiltShiftXFilter.apply(filterManager, input, renderTarget);\n        this.tiltShiftYFilter.apply(filterManager, renderTarget, output);\n        filterManager.returnRenderTarget(renderTarget);\n    }\n\n    /**\n     * The strength of the blur.\n     *\n     * @member {number}\n     */\n    get blur() {\n        return this.tiltShiftXFilter.blur;\n    }\n    set blur(value) {\n        this.tiltShiftXFilter.blur = this.tiltShiftYFilter.blur = value;\n    }\n\n    /**\n     * The strength of the gradient blur.\n     *\n     * @member {number}\n     */\n    get gradientBlur() {\n        return this.tiltShiftXFilter.gradientBlur;\n    }\n    set gradientBlur(value) {\n        this.tiltShiftXFilter.gradientBlur = this.tiltShiftYFilter.gradientBlur = value;\n    }\n\n    /**\n     * The Y value to start the effect at.\n     *\n     * @member {PIXI.Point}\n     */\n    get start() {\n        return this.tiltShiftXFilter.start;\n    }\n    set start(value) {\n        this.tiltShiftXFilter.start = this.tiltShiftYFilter.start = value;\n    }\n\n    /**\n     * The Y value to end the effect at.\n     *\n     * @member {PIXI.Point}\n     */\n    get end() {\n        return this.tiltShiftXFilter.end;\n    }\n    set end(value) {\n        this.tiltShiftXFilter.end = this.tiltShiftYFilter.end = value;\n    }\n}","import vertex from '../fragments/default.vert';\nimport fragment from './twist.frag';\n\n/**\n * This filter applies a twist effect making display objects appear twisted in the given direction.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [radius=200] The radius of the twist.\n * @param {number} [angle=4] The angle of the twist.\n * @param {number} [padding=20] Padding for filter area.\n */\nexport default class TwistFilter extends PIXI.Filter {\n    constructor(radius = 200, angle = 4, padding = 20) {\n        super(vertex, fragment);\n\n        this.radius = radius;\n        this.angle = angle;\n        this.padding = padding;\n    }\n\n    /**\n     * This point describes the the offset of the twist.\n     *\n     * @member {PIXI.Point}\n     */\n    get offset() {\n        return this.uniforms.offset;\n    }\n    set offset(value) {\n        this.uniforms.offset = value;\n    }\n\n    /**\n     * The radius of the twist.\n     *\n     * @member {number}\n     */\n    get radius() {\n        return this.uniforms.radius;\n    }\n    set radius(value) {\n        this.uniforms.radius = value;\n    }\n\n    /**\n     * The angle of the twist.\n     *\n     * @member {number}\n     */\n    get angle() {\n        return this.uniforms.angle;\n    }\n    set angle(value) {\n        this.uniforms.angle = value;\n    }\n}\n"],"names":["super","const","vertex","fragment","let"],"mappings":"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"}