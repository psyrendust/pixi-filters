{"version":3,"file":"bloom.js","sources":["../src/bloom/BloomFilter.js"],"sourcesContent":["const {BlurXFilter, BlurYFilter, VoidFilter} = PIXI.filters;\n\n/**\n * The BloomFilter applies a Gaussian blur to an object.\n * The strength of the blur can be set for x- and y-axis separately.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number|PIXI.Point} [blur=2] Sets the strength of both the blurX and blurY properties simultaneously\n */\nexport default class BloomFilter extends PIXI.Filter {\n\n    constructor(blur = 2) {\n        super();\n        this.blurXFilter = new BlurXFilter();\n        this.blurYFilter = new BlurYFilter();\n        this.blurYFilter.blendMode = PIXI.BLEND_MODES.SCREEN;\n        this.defaultFilter = new VoidFilter();\n\n        if (typeof blur === 'number') {\n            this.blur = blur;\n        }\n        else if (blur instanceof PIXI.Point) {\n            this.blurX = blur.x;\n            this.blurY = blur.y;\n        }\n    }\n\n    apply(filterManager, input, output) {\n        const renderTarget = filterManager.getRenderTarget(true);\n\n        //TODO - copyTexSubImage2D could be used here?\n        this.defaultFilter.apply(filterManager, input, output);\n\n        this.blurXFilter.apply(filterManager, input, renderTarget);\n        this.blurYFilter.apply(filterManager, renderTarget, output);\n\n        filterManager.returnRenderTarget(renderTarget);\n    }\n\n    /**\n     * Sets the strength of both the blurX and blurY properties simultaneously\n     *\n     * @member {number}\n     * @default 2\n     */\n    get blur() {\n        return this.blurXFilter.blur;\n    }\n    set blur(value) {\n        this.blurXFilter.blur = this.blurYFilter.blur = value;\n    }\n\n    /**\n     * Sets the strength of the blurX property\n     *\n     * @member {number}\n     * @default 2\n     */\n    get blurX() {\n        return this.blurXFilter.blur;\n    }\n    set blurX(value) {\n        this.blurXFilter.blur = value;\n    }\n\n    /**\n     * Sets the strength of the blurY property\n     *\n     * @member {number}\n     * @default 2\n     */\n    get blurY() {\n        return this.blurYFilter.blur;\n    }\n    set blurY(value) {\n        this.blurYFilter.blur = value;\n    }\n}\n"],"names":["super","const"],"mappings":";;;;;;;;;;;;;;;;AAAK,OAAuC,GAAG,IAAI,CAAC,OAAO;AAApD,IAAA,WAAW;AAAE,IAAA,WAAW;AAAE,IAAA,UAAU,kBAArC;;;;;;;;;;;AAWN,IAAqB,WAAW;IAAqB,oBAEtC,CAAC,IAAQ,EAAE;mCAAN,GAAG,CAAC;;QAChBA,UAAK,KAAA,CAAC,IAAA,CAAC,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QACrD,IAAI,CAAC,aAAa,GAAG,IAAI,UAAU,EAAE,CAAC;;QAEtC,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACpB;aACI,IAAI,IAAI,YAAY,IAAI,CAAC,KAAK,EAAE;YACjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;SACvB;KACJ;;;;;;8DAAA;;IAED,sBAAA,KAAK,mBAAC,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE;QAChCC,IAAM,YAAY,GAAG,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;;;QAGzD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;;QAEvD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;;QAE5D,aAAa,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;KAClD,CAAA;;;;;;;;IAQD,mBAAA,IAAQ,mBAAG;QACP,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;KAChC,CAAA;IACD,mBAAA,IAAQ,iBAAC,KAAK,EAAE;QACZ,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC;KACzD,CAAA;;;;;;;;IAQD,mBAAA,KAAS,mBAAG;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;KAChC,CAAA;IACD,mBAAA,KAAS,iBAAC,KAAK,EAAE;QACb,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC;KACjC,CAAA;;;;;;;;IAQD,mBAAA,KAAS,mBAAG;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;KAChC,CAAA;IACD,mBAAA,KAAS,iBAAC,KAAK,EAAE;QACb,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC;KACjC,CAAA;;;;;EAnEoC,IAAI,CAAC,MAoE7C;;;;;;;;;;;;;;;;"}