{"version":3,"file":"convolution.min.js","sources":["../src/convolution/ConvolutionFilter.js"],"sourcesContent":["import vertex from '../fragments/default.vert';\nimport fragment from './convolution.frag';\n\n/**\n * The ConvolutionFilter class applies a matrix convolution filter effect.\n * A convolution combines pixels in the input image with neighboring pixels to produce a new image.\n * A wide variety of image effects can be achieved through convolutions, including blurring, edge\n * detection, sharpening, embossing, and beveling. The matrix should be specified as a 9 point Array.\n * See http://docs.gimp.org/en/plug-in-convmatrix.html for more info.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param matrix {number[]} An array of values used for matrix transformation. Specified as a 9 point Array.\n * @param width {number} Width of the object you are transforming\n * @param height {number} Height of the object you are transforming\n */\nexport default class ConvolutionFilter extends PIXI.Filter {\n\n    constructor(matrix, width, height) {\n        super(vertex, fragment);\n        this.matrix = matrix;\n        this.width = width;\n        this.height = height;\n    }\n\n    /**\n     * An array of values used for matrix transformation. Specified as a 9 point Array.\n     *\n     * @member {Array<number>}\n     */\n    get matrix() {\n        return this.uniforms.matrix;\n    }\n    set matrix(value) {\n        this.uniforms.matrix = new Float32Array(value);\n    }\n\n    /**\n     * Width of the object you are transforming\n     *\n     * @member {number}\n     */\n    get width() {\n        return 1/this.uniforms.texelSize[0];\n    }\n    set width(value) {\n        this.uniforms.texelSize[0] = 1/value;\n    }\n\n    /**\n     * Height of the object you are transforming\n     *\n     * @member {number}\n     */\n    get height() {\n        return 1/this.uniforms.texelSize[1];\n    }\n    set height(value) {\n        this.uniforms.texelSize[1] = 1/value;\n    }\n}\n"],"names":["ConvolutionFilter","matrix","width","height","super","this","vertex","fragment","prototypeAccessors","uniforms","value","Float32Array","texelSize","PIXI","Filter"],"mappings":";;;;;;;sxDAiBqBA,cAAsC,WAE3CC,EAAQC,EAAOC,GACvBC,OAAMC,KAAAC,EAAQC,GACdF,KAAKJ,OAASA,EACdI,KAAKH,MAAQA,EACbG,KAAKF,OAASA,2HAQlBK,EAAAP,sBACI,OAAOI,KAAKI,SAASR,QAEzBO,EAAAP,oBAAWS,GACPL,KAAKI,SAASR,OAAS,IAAIU,aAAaD,IAQ5CF,EAAAN,qBACI,OAAO,EAAEG,KAAKI,SAASG,UAAU,IAErCJ,EAAAN,mBAAUQ,GACNL,KAAKI,SAASG,UAAU,GAAK,EAAEF,GAQnCF,EAAAL,sBACI,OAAO,EAAEE,KAAKI,SAASG,UAAU,IAErCJ,EAAAL,oBAAWO,GACPL,KAAKI,SAASG,UAAU,GAAK,EAAEF,6CA1CQG,KAAKC"}