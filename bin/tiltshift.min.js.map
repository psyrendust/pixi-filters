{"version":3,"file":"tiltshift.min.js","sources":["../src/tiltshift/TiltShiftAxisFilter.js","../src/tiltshift/TiltShiftXFilter.js","../src/tiltshift/TiltShiftYFilter.js","../src/tiltshift/TiltShiftFilter.js"],"sourcesContent":["import vertex from '../fragments/default.vert';\nimport fragment from './tilt-shift.frag';\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftAxisFilter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @private\n */\nexport default class TiltShiftAxisFilter extends PIXI.Filter {\n\n    constructor(blur = 100, gradientBlur = 600, start = null, end = null){\n        super(vertex, fragment);\n        this.uniforms.blur = blur;\n        this.uniforms.gradientBlur = gradientBlur;\n        this.uniforms.start = start || new PIXI.Point(0, window.innerHeight / 2);\n        this.uniforms.end = end || new PIXI.Point(600, window.innerHeight / 2);\n        this.uniforms.delta = new PIXI.Point(30, 30);\n        this.uniforms.texSize = new PIXI.Point(window.innerWidth, window.innerHeight);\n        this.updateDelta();\n    }\n\n    /**\n     * Updates the filter delta values.\n     * This is overridden in the X and Y filters, does nothing for this class.\n     *\n     */\n    updateDelta() {\n        this.uniforms.delta.x = 0;\n        this.uniforms.delta.y = 0;\n    }\n\n    /**\n     * The strength of the blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    get blur() {\n        return this.uniforms.blur;\n    }\n    set blur(value) {\n        this.uniforms.blur = value;\n    }\n\n    /**\n     * The strength of the gradient blur.\n     *\n     * @member {number}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    get gradientBlur() {\n        return this.uniforms.gradientBlur;\n    }\n    set gradientBlur(value) {\n        this.uniforms.gradientBlur = value;\n    }\n\n    /**\n     * The X value to start the effect at.\n     *\n     * @member {PIXI.Point}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    get start() {\n        return this.uniforms.start;\n    }\n    set start(value) {\n        this.uniforms.start = value;\n        this.updateDelta();\n    }\n\n    /**\n     * The X value to end the effect at.\n     *\n     * @member {PIXI.Point}\n     * @memberof PIXI.filters.TiltShiftAxisFilter#\n     */\n    get end() {\n        return this.uniforms.end;\n    }\n    set end(value) {\n        this.uniforms.end = value;\n        this.updateDelta();\n    }\n}\n","import TiltShiftAxisFilter from './TiltShiftAxisFilter';\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftXFilter.\n *\n * @class\n * @extends PIXI.TiltShiftAxisFilter\n * @memberof PIXI.filters\n * @private\n */\nexport default class TiltShiftXFilter extends TiltShiftAxisFilter {\n    /**\n     * Updates the filter delta values.\n     */\n    updateDelta() {\n        const dx = this.uniforms.end.x - this.uniforms.start.x;\n        const dy = this.uniforms.end.y - this.uniforms.start.y;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        this.uniforms.delta.x = dx / d;\n        this.uniforms.delta.y = dy / d;\n    }\n}\n","import TiltShiftAxisFilter from './TiltShiftAxisFilter';\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShiftYFilter.\n *\n * @class\n * @extends PIXI.TiltShiftAxisFilter\n * @memberof PIXI.filters\n * @private\n */\nexport default class TiltShiftYFilter extends TiltShiftAxisFilter {\n    /**\n     * Updates the filter delta values.\n     */\n    updateDelta() {\n        const dx = this.uniforms.end.x - this.uniforms.start.x;\n        const dy = this.uniforms.end.y - this.uniforms.start.y;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        this.uniforms.delta.x = -dy / d;\n        this.uniforms.delta.y = dx / d;\n    }\n}","import TiltShiftXFilter from './TiltShiftXFilter';\nimport TiltShiftYFilter from './TiltShiftYFilter';\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShift Filter. Manages the pass of both a TiltShiftXFilter and TiltShiftYFilter.\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [blur=100] The strength of the blur.\n * @param {number} [gradientBlur=600] The strength of the gradient blur.\n * @param {PIXI.Point} [start=null] The Y value to start the effect at.\n * @param {PIXI.Point} [end=null] The Y value to end the effect at.\n */\nexport default class TiltShiftFilter extends PIXI.Filter {\n    \n    constructor(blur = 100, gradientBlur = 600, start = null, end = null) {\n        super();\n        this.tiltShiftXFilter = new TiltShiftXFilter(blur, gradientBlur, start, end);\n        this.tiltShiftYFilter = new TiltShiftYFilter(blur, gradientBlur, start, end);\n    }\n\n    apply(filterManager, input, output) {\n        let renderTarget = filterManager.getRenderTarget(true);\n        this.tiltShiftXFilter.apply(filterManager, input, renderTarget);\n        this.tiltShiftYFilter.apply(filterManager, renderTarget, output);\n        filterManager.returnRenderTarget(renderTarget);\n    }\n\n    /**\n     * The strength of the blur.\n     *\n     * @member {number}\n     */\n    get blur() {\n        return this.tiltShiftXFilter.blur;\n    }\n    set blur(value) {\n        this.tiltShiftXFilter.blur = this.tiltShiftYFilter.blur = value;\n    }\n\n    /**\n     * The strength of the gradient blur.\n     *\n     * @member {number}\n     */\n    get gradientBlur() {\n        return this.tiltShiftXFilter.gradientBlur;\n    }\n    set gradientBlur(value) {\n        this.tiltShiftXFilter.gradientBlur = this.tiltShiftYFilter.gradientBlur = value;\n    }\n\n    /**\n     * The Y value to start the effect at.\n     *\n     * @member {PIXI.Point}\n     */\n    get start() {\n        return this.tiltShiftXFilter.start;\n    }\n    set start(value) {\n        this.tiltShiftXFilter.start = this.tiltShiftYFilter.start = value;\n    }\n\n    /**\n     * The Y value to end the effect at.\n     *\n     * @member {PIXI.Point}\n     */\n    get end() {\n        return this.tiltShiftXFilter.end;\n    }\n    set end(value) {\n        this.tiltShiftXFilter.end = this.tiltShiftYFilter.end = value;\n    }\n}"],"names":["TiltShiftAxisFilter","blur","gradientBlur","start","end","super","this","vertex","fragment","uniforms","PIXI","Point","window","innerHeight","delta","texSize","innerWidth","updateDelta","x","y","prototypeAccessors","value","Filter","TiltShiftXFilter","const","dx","dy","d","Math","sqrt","TiltShiftYFilter","TiltShiftFilter","tiltShiftXFilter","tiltShiftYFilter","apply","filterManager","input","output","let","renderTarget","getRenderTarget","returnRenderTarget"],"mappings":"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"}